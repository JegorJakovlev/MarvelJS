{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","calssName","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.80c0dae4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\n    const _apiKey = 'apikey=5b19420ac0c763f8ec0ad9978f859a6c';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n        }\n    }\n\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback (async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading (true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error,clearError}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> :null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div calssName=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState([false]);\n    const [offset, setOffset] = useState([210]);\n    const [charEnded, setCharEnded] = useState([false]);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n\n\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mb/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick= {() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component{\n    state={\n        error:false\n    }\n\n    componentDidCatch(error, errorInfo){\n        console.log(error, errorInfo);\n        this.setState({\n            error:true\n        })\n    }\n\n    render(){\n        if(this.state.error){\n            return<ErrorMessage/>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;"],"sourceRoot":""}